scalar Time

type AuthToken {
  accessToken: String!
  expiredAt: Time!
}

type AuthResponse {
  authtoken: AuthToken!
  user: User!
}

type User {
  id:ID!
  name: String!
  email: String!
  todos: [Todo!]!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input LoginInput {
  email: String!
  password: String!
}


extend type Query {
  me: User!
}

extend type Mutation {
  signUp(input: RegisterInput!): AuthResponse!
  signIn(input: LoginInput!): AuthResponse!
}
